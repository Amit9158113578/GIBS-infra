- hosts: node1
  roles:
    - role: elastic.elasticsearch
  vars:
    es_version: "{{ lookup('ENV','ELK_VERSION') }}"
    es_enable_xpack: true
    es_data_dirs:
      - "/data/elasticsearch/data"
    es_log_dir: "/data/elasticsearch/logs"
    es_path_repo: "/data/elasticsearch/backup"
    es_java_install: true
    es_ssl_certificate_authority: security/ca/ca.crt
    es_ssl_key: security/node1/node1.key
    es_ssl_certificate: security/node1/node1.crt
    es_enable_http_ssl: true
    es_enable_auto_ssl_configuration: true
    es_api_basic_auth_username: "{{ lookup('ENV','ELASTICSEARCH_USERNAME') }}"
    es_api_basic_auth_password: "{{ lookup('ENV','ELASTICSEARCH_PASSWORD') }}"
    es_enable_transport_ssl: true 
    es_xpack_features: []
    es_config:
      xpack.monitoring.collection.enabled: true
      cluster.name: "ELK-{{ lookup('ENV','ENV') }}-Cluster"
      cluster.initial_master_nodes: "node1"
      discovery.seed_hosts: "{{ lookup('ENV','HOSTS') }}"
      http.port: 9200
      node.data: true
      node.master: true
      bootstrap.memory_lock: false
      network.host: '0.0.0.0'

      xpack:
        security:
          authc:
            realms:
              native:
                native1:
                  order: 0
              ldap:
                ldap1:
                  order: 1
                  url: "{{ lookup('ENV','LDAP_URL') }}"
                  bind_dn: "{{ lookup('ENV','LDAP_USER') }}"
                  bind_password: "{{ lookup('ENV','LDAP_PASSWORD') }}"
                  user_search:
                    base_dn: "ou=users,ou=GCC,o=GBIS"
                    filter: "(cn={0})"
                  group_search:
                    base_dn: "ou=groups,ou=GCC,o=GBIS"
                  files:
                    role_mapping: "/etc/elasticsearch/role_mapping.yml"
                  unmapped_groups_as_roles: false
    es_plugins:
     - plugin: ingest-attachment
  tasks:
    - name: Copy role mapping
      copy:
        src: role_mapping.yml
        dest: /etc/elasticsearch/role_mapping.yml
        force: yes
      become: yes
    - name: restart elasticsearch
      service:
          name: elasticsearch
          state: restarted
      become: yes





- hosts: node2
  roles:
    - role: elastic.elasticsearch
  vars:
    es_version: "{{ lookup('ENV','ELK_VERSION') }}"
    es_enable_xpack: true
    es_data_dirs:
      - "/data/elasticsearch/data"
    es_log_dir: "/data/elasticsearch/logs"
    es_path_repo: "/data/elasticsearch/backup"
    es_java_install: true
    es_ssl_certificate_authority: security/ca/ca.crt
    es_ssl_key: security/node2/node2.key
    es_ssl_certificate: security/node2/node2.crt
    es_enable_http_ssl: true
    es_enable_auto_ssl_configuration: true
    es_api_basic_auth_username: "{{ lookup('ENV','ELASTICSEARCH_USERNAME') }}"
    es_api_basic_auth_password: "{{ lookup('ENV','ELASTICSEARCH_PASSWORD') }}"
    es_enable_transport_ssl: true 
    es_xpack_features: []
    es_config:
      xpack.monitoring.collection.enabled: true
      cluster.name: "ELK-{{ lookup('ENV','ENV') }}-Cluster"
      cluster.initial_master_nodes: "node1"
      discovery.seed_hosts: "{{ lookup('ENV','HOSTS') }}"
      http.port: 9200
      node.data: true
      node.master: true
      bootstrap.memory_lock: false
      network.host: '0.0.0.0'
      
      xpack:
        security:
          authc:
            realms:
              native:
                native1:
                  order: 0
              ldap:
                ldap1:
                  order: 1
                  url: "{{ lookup('ENV','LDAP_URL') }}"
                  bind_dn: "{{ lookup('ENV','LDAP_USER') }}"
                  bind_password: "{{ lookup('ENV','LDAP_PASSWORD') }}"
                  user_search:
                    base_dn: "ou=users,ou=GCC,o=GBIS"
                    filter: "(cn={0})"
                  group_search:
                    base_dn: "ou=groups,ou=GCC,o=GBIS"
                  files:
                    role_mapping: "/etc/elasticsearch/role_mapping.yml"
                  unmapped_groups_as_roles: false
    es_plugins:
     - plugin: ingest-attachment
  tasks:
    - name: Copy role mapping
      copy:
        src: role_mapping.yml
        dest: /etc/elasticsearch/role_mapping.yml
        force: yes
      become: yes
    - name: restart elasticsearch
      service:
          name: elasticsearch
          state: restarted
      become: yes


- hosts: node3
  roles:
    - role: elastic.elasticsearch
  vars:
    es_version: "{{ lookup('ENV','ELK_VERSION') }}"
    es_enable_xpack: true
    es_data_dirs:
      - "/data/elasticsearch/data"
    es_log_dir: "/data/elasticsearch/logs"
    es_path_repo: "/data/elasticsearch/backup"
    es_java_install: true
    es_ssl_certificate_authority: security/ca/ca.crt
    es_ssl_key: security/node3/node3.key
    es_ssl_certificate: security/node3/node3.crt
    es_enable_http_ssl: true
    es_enable_auto_ssl_configuration: true
    es_api_basic_auth_username: "{{ lookup('ENV','ELASTICSEARCH_USERNAME') }}"
    es_api_basic_auth_password: "{{ lookup('ENV','ELASTICSEARCH_PASSWORD') }}"
    es_enable_transport_ssl: true 
    es_xpack_features: []
    es_config:
      xpack.monitoring.collection.enabled: true
      cluster.name: "ELK-{{ lookup('ENV','ENV') }}-Cluster"
      cluster.initial_master_nodes: "node1"
      discovery.seed_hosts: "{{ lookup('ENV','HOSTS') }}"
      http.port: 9200
      node.data: true
      node.master: true
      bootstrap.memory_lock: false
      network.host: '0.0.0.0'
      
      xpack:
        security:
          authc:
            realms:
              native:
                native1:
                  order: 0
              ldap:
                ldap1:
                  order: 1
                  url: "{{ lookup('ENV','LDAP_URL') }}"
                  bind_dn: "{{ lookup('ENV','LDAP_USER') }}"
                  bind_password: "{{ lookup('ENV','LDAP_PASSWORD') }}"
                  user_search:
                    base_dn: "ou=users,ou=GCC,o=GBIS"
                    filter: "(cn={0})"
                  group_search:
                    base_dn: "ou=groups,ou=GCC,o=GBIS"
                  files:
                    role_mapping: "/etc/elasticsearch/role_mapping.yml"
                  unmapped_groups_as_roles: false
    es_plugins:
     - plugin: ingest-attachment
  tasks:
    - name: Copy role mapping
      copy:
        src: role_mapping.yml
        dest: /etc/elasticsearch/role_mapping.yml
        force: yes
      become: yes
    - name: restart elasticsearch
      service:
          name: elasticsearch
          state: restarted
      become: yes